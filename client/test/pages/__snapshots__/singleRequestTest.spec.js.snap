// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SingleRequest /> stores a snapshot of the component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SingleRequest
    aRequest={[Function]}
    history={
      Object {
        "push": [MockFunction],
      }
    }
    logout={[Function]}
    match={
      Object {
        "params": Object {
          "id": "1",
        },
      }
    }
    oneRequest={
      Object {
        "department": "technology",
        "description": "repair laptop",
        "equipment": "computer",
        "id": 1,
        "requeststatus": "pending",
        "serialnumber": 111111111,
        "title": "repair computer",
        "user_id": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Header>
          <Link
            replace={false}
            to="/"
          >
            Home
          </Link>
          <Link
            replace={false}
            to="/createrequest"
          >
            Create Request
          </Link>
          <Link
            replace={false}
            to="/allrequests"
          >
            My request
          </Link>
          <button
            className="header-btn"
            onClick={[Function]}
          >
            Logout
          </button>
        </Header>,
        <section
          className="allrequests"
        >
          <div
            className="detailsrequest-card"
          >
            <p>
              <label>
                Title:
              </label>
              repair computer
            </p>
            <p>
              <label>
                Department:
              </label>
              technology
            </p>
            <p>
              <label>
                Equipment: 
              </label>
              computer
            </p>
            <p>
              <label>
                Description: 
              </label>
              repair laptop
            </p>
            <div
              className="container"
            >
              <div
                className="status fixed"
              >
                <label
                  className="yellow"
                >
                  pending
                </label>
                
                
                
              </div>
              <div
                className="status fixed "
              >
                <p>
                  <Link
                    replace={false}
                    to="/editrequest"
                  >
                    Edit
                  </Link>
                </p>
              </div>
            </div>
          </div>
        </section>,
        <Footer />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Link
              replace={false}
              to="/"
            >
              Home
            </Link>,
            <Link
              replace={false}
              to="/createrequest"
            >
              Create Request
            </Link>,
            <Link
              replace={false}
              to="/allrequests"
            >
              My request
            </Link>,
            <button
              className="header-btn"
              onClick={[Function]}
            >
              Logout
            </button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Home",
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": "Home",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Create Request",
              "replace": false,
              "to": "/createrequest",
            },
            "ref": null,
            "rendered": "Create Request",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "My request",
              "replace": false,
              "to": "/allrequests",
            },
            "ref": null,
            "rendered": "My request",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Logout",
              "className": "header-btn",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Logout",
            "type": "button",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="detailsrequest-card"
          >
            <p>
              <label>
                Title:
              </label>
              repair computer
            </p>
            <p>
              <label>
                Department:
              </label>
              technology
            </p>
            <p>
              <label>
                Equipment: 
              </label>
              computer
            </p>
            <p>
              <label>
                Description: 
              </label>
              repair laptop
            </p>
            <div
              className="container"
            >
              <div
                className="status fixed"
              >
                <label
                  className="yellow"
                >
                  pending
                </label>
                
                
                
              </div>
              <div
                className="status fixed "
              >
                <p>
                  <Link
                    replace={false}
                    to="/editrequest"
                  >
                    Edit
                  </Link>
                </p>
              </div>
            </div>
          </div>,
          "className": "allrequests",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": "5c5732",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                <label>
                  Title:
                </label>
                repair computer
              </p>,
              <p>
                <label>
                  Department:
                </label>
                technology
              </p>,
              <p>
                <label>
                  Equipment: 
                </label>
                computer
              </p>,
              <p>
                <label>
                  Description: 
                </label>
                repair laptop
              </p>,
              <div
                className="container"
              >
                <div
                  className="status fixed"
                >
                  <label
                    className="yellow"
                  >
                    pending
                  </label>
                  
                  
                  
                </div>
                <div
                  className="status fixed "
                >
                  <p>
                    <Link
                      replace={false}
                      to="/editrequest"
                    >
                      Edit
                    </Link>
                  </p>
                </div>
              </div>,
            ],
            "className": "detailsrequest-card",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Title:
                  </label>,
                  "repair computer",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Title:",
                  },
                  "ref": null,
                  "rendered": "Title:",
                  "type": "label",
                },
                "repair computer",
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Department:
                  </label>,
                  "technology",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Department:",
                  },
                  "ref": null,
                  "rendered": "Department:",
                  "type": "label",
                },
                "technology",
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Equipment: 
                  </label>,
                  "computer",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Equipment: ",
                  },
                  "ref": null,
                  "rendered": "Equipment: ",
                  "type": "label",
                },
                "computer",
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    Description: 
                  </label>,
                  "repair laptop",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Description: ",
                  },
                  "ref": null,
                  "rendered": "Description: ",
                  "type": "label",
                },
                "repair laptop",
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="status fixed"
                  >
                    <label
                      className="yellow"
                    >
                      pending
                    </label>
                    
                    
                    
                  </div>,
                  <div
                    className="status fixed "
                  >
                    <p>
                      <Link
                        replace={false}
                        to="/editrequest"
                      >
                        Edit
                      </Link>
                    </p>
                  </div>,
                ],
                "className": "container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        className="yellow"
                      >
                        pending
                      </label>,
                      "",
                      "",
                      "",
                    ],
                    "className": "status fixed",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "pending",
                        "className": "yellow",
                      },
                      "ref": null,
                      "rendered": "pending",
                      "type": "label",
                    },
                    "",
                    "",
                    "",
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <p>
                      <Link
                        replace={false}
                        to="/editrequest"
                      >
                        Edit
                      </Link>
                    </p>,
                    "className": "status fixed ",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Link
                        replace={false}
                        to="/editrequest"
                      >
                        Edit
                      </Link>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Edit",
                        "replace": false,
                        "to": "/editrequest",
                      },
                      "ref": null,
                      "rendered": "Edit",
                      "type": [Function],
                    },
                    "type": "p",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "section",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header>
            <Link
              replace={false}
              to="/"
            >
              Home
            </Link>
            <Link
              replace={false}
              to="/createrequest"
            >
              Create Request
            </Link>
            <Link
              replace={false}
              to="/allrequests"
            >
              My request
            </Link>
            <button
              className="header-btn"
              onClick={[Function]}
            >
              Logout
            </button>
          </Header>,
          <section
            className="allrequests"
          >
            <div
              className="detailsrequest-card"
            >
              <p>
                <label>
                  Title:
                </label>
                repair computer
              </p>
              <p>
                <label>
                  Department:
                </label>
                technology
              </p>
              <p>
                <label>
                  Equipment: 
                </label>
                computer
              </p>
              <p>
                <label>
                  Description: 
                </label>
                repair laptop
              </p>
              <div
                className="container"
              >
                <div
                  className="status fixed"
                >
                  <label
                    className="yellow"
                  >
                    pending
                  </label>
                  
                  
                  
                </div>
                <div
                  className="status fixed "
                >
                  <p>
                    <Link
                      replace={false}
                      to="/editrequest"
                    >
                      Edit
                    </Link>
                  </p>
                </div>
              </div>
            </div>
          </section>,
          <Footer />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Link
                replace={false}
                to="/"
              >
                Home
              </Link>,
              <Link
                replace={false}
                to="/createrequest"
              >
                Create Request
              </Link>,
              <Link
                replace={false}
                to="/allrequests"
              >
                My request
              </Link>,
              <button
                className="header-btn"
                onClick={[Function]}
              >
                Logout
              </button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Home",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Home",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Create Request",
                "replace": false,
                "to": "/createrequest",
              },
              "ref": null,
              "rendered": "Create Request",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "My request",
                "replace": false,
                "to": "/allrequests",
              },
              "ref": null,
              "rendered": "My request",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Logout",
                "className": "header-btn",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Logout",
              "type": "button",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="detailsrequest-card"
            >
              <p>
                <label>
                  Title:
                </label>
                repair computer
              </p>
              <p>
                <label>
                  Department:
                </label>
                technology
              </p>
              <p>
                <label>
                  Equipment: 
                </label>
                computer
              </p>
              <p>
                <label>
                  Description: 
                </label>
                repair laptop
              </p>
              <div
                className="container"
              >
                <div
                  className="status fixed"
                >
                  <label
                    className="yellow"
                  >
                    pending
                  </label>
                  
                  
                  
                </div>
                <div
                  className="status fixed "
                >
                  <p>
                    <Link
                      replace={false}
                      to="/editrequest"
                    >
                      Edit
                    </Link>
                  </p>
                </div>
              </div>
            </div>,
            "className": "allrequests",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": "5c5732",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p>
                  <label>
                    Title:
                  </label>
                  repair computer
                </p>,
                <p>
                  <label>
                    Department:
                  </label>
                  technology
                </p>,
                <p>
                  <label>
                    Equipment: 
                  </label>
                  computer
                </p>,
                <p>
                  <label>
                    Description: 
                  </label>
                  repair laptop
                </p>,
                <div
                  className="container"
                >
                  <div
                    className="status fixed"
                  >
                    <label
                      className="yellow"
                    >
                      pending
                    </label>
                    
                    
                    
                  </div>
                  <div
                    className="status fixed "
                  >
                    <p>
                      <Link
                        replace={false}
                        to="/editrequest"
                      >
                        Edit
                      </Link>
                    </p>
                  </div>
                </div>,
              ],
              "className": "detailsrequest-card",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label>
                      Title:
                    </label>,
                    "repair computer",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Title:",
                    },
                    "ref": null,
                    "rendered": "Title:",
                    "type": "label",
                  },
                  "repair computer",
                ],
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label>
                      Department:
                    </label>,
                    "technology",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Department:",
                    },
                    "ref": null,
                    "rendered": "Department:",
                    "type": "label",
                  },
                  "technology",
                ],
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label>
                      Equipment: 
                    </label>,
                    "computer",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Equipment: ",
                    },
                    "ref": null,
                    "rendered": "Equipment: ",
                    "type": "label",
                  },
                  "computer",
                ],
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label>
                      Description: 
                    </label>,
                    "repair laptop",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Description: ",
                    },
                    "ref": null,
                    "rendered": "Description: ",
                    "type": "label",
                  },
                  "repair laptop",
                ],
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="status fixed"
                    >
                      <label
                        className="yellow"
                      >
                        pending
                      </label>
                      
                      
                      
                    </div>,
                    <div
                      className="status fixed "
                    >
                      <p>
                        <Link
                          replace={false}
                          to="/editrequest"
                        >
                          Edit
                        </Link>
                      </p>
                    </div>,
                  ],
                  "className": "container",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <label
                          className="yellow"
                        >
                          pending
                        </label>,
                        "",
                        "",
                        "",
                      ],
                      "className": "status fixed",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "pending",
                          "className": "yellow",
                        },
                        "ref": null,
                        "rendered": "pending",
                        "type": "label",
                      },
                      "",
                      "",
                      "",
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <p>
                        <Link
                          replace={false}
                          to="/editrequest"
                        >
                          Edit
                        </Link>
                      </p>,
                      "className": "status fixed ",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Link
                          replace={false}
                          to="/editrequest"
                        >
                          Edit
                        </Link>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Edit",
                          "replace": false,
                          "to": "/editrequest",
                        },
                        "ref": null,
                        "rendered": "Edit",
                        "type": [Function],
                      },
                      "type": "p",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "section",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
